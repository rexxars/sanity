// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`T.defaultTemplateForType() generates correct representation of type with initial value 1`] = `
Object {
  "icon": [Function],
  "id": "post",
  "schemaType": "post",
  "title": "Post",
  "value": Object {
    "slug": Object {
      "_type": "slug",
      "current": "default-slug",
    },
  },
}
`;

exports[`T.defaultTemplateForType() generates correct representation of type without initial value 1`] = `
Object {
  "icon": undefined,
  "id": "author",
  "schemaType": "author",
  "title": "Author",
  "value": Object {
    "_type": "author",
  },
}
`;

exports[`T.defaults() generates array of all schema type templates 1`] = `
Array [
  TemplateBuilder {
    "spec": Object {
      "icon": undefined,
      "id": "author",
      "schemaType": "author",
      "title": "Author",
      "value": Object {
        "_type": "author",
      },
    },
  },
  TemplateBuilder {
    "spec": Object {
      "icon": [Function],
      "id": "post",
      "schemaType": "post",
      "title": "Post",
      "value": Object {
        "slug": Object {
          "_type": "slug",
          "current": "default-slug",
        },
      },
    },
  },
]
`;

exports[`T.defaults() generates array of all schema type templates 2`] = `
Array [
  Object {
    "icon": undefined,
    "id": "author",
    "schemaType": "author",
    "title": "Author",
    "value": Object {
      "_type": "author",
    },
  },
  Object {
    "icon": [Function],
    "id": "post",
    "schemaType": "post",
    "title": "Post",
    "value": Object {
      "slug": Object {
        "_type": "slug",
        "current": "default-slug",
      },
    },
  },
]
`;

exports[`T.template() builds template through constructor 1`] = `
Object {
  "icon": [Function],
  "id": "foo",
  "schemaType": "author",
  "title": "some title",
  "value": Object {
    "name": "Default name!",
  },
}
`;

exports[`T.template() can construct using builder 1`] = `
Object {
  "icon": [Function],
  "id": "yeah",
  "schemaType": "author",
  "title": "Yeah",
  "value": Object {
    "name": "bar",
  },
}
`;
